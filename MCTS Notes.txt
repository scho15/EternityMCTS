Implemented with tree policy of sampling if epsilon < state visit count and greedy max if epsilon is small
state visit counts will need to be big (100) before epsilon comes easily into play [e = 100/(100+svc)]
Tried average and maximum values as alternatives for "value" but decided that as "values" are meant to represent the most accurate final value, it was better using maximum rather than average
This is an "unusual" implementation for MCTS but hoping it works!!

Points to Try:
- Have used tiles checked once when MCST is appended rather than each time on consecutive matches
- Check for double rotation/solve two position problem in complete solutions
- 202 solution lost as was not part of terminal iteration - record solns > 200 as well. Tempting to also record outputs in Q.

Conclusion:
- Trial run with count cutoff work much better than sampling
- Having 2 runs rather than 1 helps to avoid some bad runs and early cutoff
- Completing from 90 looks good
- Terminal solution is not always the best so propagating early maxes up the tree
- Aim should be to produce as many 200+ solutions as possible-there are only 9 at iteration 90 and 17 at iteration 4

Notes
Migration to cutoff method of 1m yields much better values but easier to get stuck on early tiles. Could be resolved
through several iterations. 
Data for runs - use max pre-terminal, average, terminal, time [up to line 120 in notes]
- 2 x 1m: 196, 192,670, 194, 13779: 196, 192.330, 194, 14494: 199, 192.322, 194, 13241: 197, 193.146, 197, 37591: 
          200, 193.418, 199, 87858: 196, 189.303, 191, 11360
- 2 x 5m: 200, 194.600, 196, 58791: 201, 194.416, 194, 65667: 199, 194.582, 194, 63698
- 2 x 10m:201, 195.582, 200, 147754:203, 195.495, 194, 134956
- 5 x 2m: 202, 194.714, 197, 71520: 199, 194.742, 196, 61096: 201, 193.189, 194, 60889
- 2 x 20m:200, 195.651, 56, 210360: [error]